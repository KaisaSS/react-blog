{"version":3,"sources":["components/Navbar.js","hooks/useFetch.js","components/BlogList.js","components/Loading.js","components/Home.js","components/Create.js","components/BlogDetails.js","components/NotFound.js","App.js","index.js"],"names":["Navbar","className","to","useFetch","url","useState","data","setData","isLoading","setIsLoading","error","setError","useEffect","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","BlogList","blogs","title","map","blog","id","author","Loading","type","color","Home","Create","setTitle","body","setBody","setAuthor","isPending","setIsPending","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","value","onChange","target","required","disabled","BlogDetails","useParams","onClick","NotFound","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54fc6e57.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <h1>The Doggy Blog</h1>\n      <div className=\"links\">\n        <NavLink to=\"/\" className=\"link\">\n          Home\n        </NavLink>\n        <NavLink to=\"/create\" className=\"link blog-link\">\n          New Blog\n        </NavLink>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import { useState, useEffect } from \"react\";\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n\n    fetch(url, { signal: abortCont.signal })\n      .then((res) => {\n        if (!res.ok) {\n          throw Error(\"Could not fetch the data!\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        setData(data);\n        setIsLoading(false);\n        setError(null);\n      })\n      .catch((err) => {\n        if (err.name === \"AbortError\") {\n          console.log(\"Fetch aborted\");\n        } else {\n          setError(err.message);\n          setIsLoading(false);\n        }\n      });\n\n    return () => abortCont.abort();\n  }, [url]);\n\n  return { data, isLoading, error };\n};\n\nexport default useFetch;\n","import { Link } from \"react-router-dom\";\n\nconst BlogList = ({ blogs, title }) => {\n  return (\n    <div className=\"blog-list\">\n      <h2>{title}</h2>\n\n      {blogs.map((blog) => (\n        <div className=\"blog-preview\" key={blog.id}>\n          <Link to={`/blogs/${blog.id}`}>\n            <h2>{blog.title}</h2>\n            <p>Written by {blog.author}</p>\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BlogList;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nconst Loading = () => {\n  return (\n    <div className=\"loader\">\n      <Loader type=\"Hearts\" color=\"#267de0\" />\n      <div>Loading...</div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import useFetch from \"../hooks/useFetch\";\nimport BlogList from \"./BlogList\";\nimport Loading from \"./Loading\";\n\nconst Home = () => {\n  const { data, isLoading, error } = useFetch(\"http://localhost:8000/blogs\");\n\n  return (\n    <div className=\"home\">\n      {error && <div>{error}</div>}\n      {isLoading && <Loading />}\n      {data && <BlogList blogs={data} title=\"All Blogs\" />}\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Create = () => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [author, setAuthor] = useState(\"Kaisa\");\n  const [isPending, setIsPending] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const blog = { title, body, author };\n\n    setIsPending(true);\n\n    fetch(\"http://localhost:8000/blogs\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(blog),\n    }).then(() => {\n      console.log(\"new blog added\");\n      setIsPending(false);\n    });\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"create\">\n      <h2>Add a new blog</h2>\n      <form onSubmit={handleSubmit}>\n        <label>Blog Title:</label>\n        <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} required />\n        <label>Blog Body:</label>\n        <textarea value={body} onChange={(e) => setBody(e.target.value)} required></textarea>\n        <label>Blog Author:</label>\n        <select value={author} onChange={(e) => setAuthor(e.target.value)}>\n          <option value=\"Kaisa\">Kaisa</option>\n          <option value=\"Daniel\">Daniel</option>\n        </select>\n        {!isPending && <button>Add Blog</button>}\n        {isPending && <button disabled>Adding Blog...</button>}\n      </form>\n    </div>\n  );\n};\n\nexport default Create;\n","import { useParams, useHistory } from \"react-router-dom\";\nimport useFetch from \"../hooks/useFetch\";\nimport Loading from \"./Loading\";\n\nconst BlogDetails = () => {\n  const { id } = useParams();\n  const { data, error, isLoading } = useFetch(\"http://localhost:8000/blogs/\" + id);\n  const history = useHistory();\n\n  const handleClick = () => {\n    fetch(\"http://localhost:8000/blogs/\" + data.id, {\n      method: \"DELETE\",\n    }).then(() => {\n      history.push(\"/\");\n    });\n  };\n\n  return (\n    <div className=\"blog-details\">\n      {isLoading && <Loading />}\n      {error && <div>{error}</div>}\n      {data && (\n        <article>\n          <h2>{data.title}</h2>\n          <p>Written by {data.author}</p>\n          <div>{data.body}</div>\n          <button onClick={handleClick}>Delete</button>\n        </article>\n      )}\n    </div>\n  );\n};\n\nexport default BlogDetails;\n","import { Link } from \"react-router-dom\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"not-found\">\n      <h2>Sorry</h2>\n      <p>Page cannot be found...</p>\n      <Link to=\"/\">Back to the homepage</Link>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\n//Components\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport Create from \"./components/Create\";\nimport BlogDetails from \"./components/BlogDetails\";\nimport NotFound from \"./components/NotFound\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/create\" component={Create} />\n            <Route path=\"/blogs/:id\" component={BlogDetails} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}